# -*- coding: utf-8 -*-
"""CV_SobelEdgeDetection.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SgqIUcBpxC_fA9f-J7RZtX5nExXhye_Y
"""

import matplotlib.pyplot as plt
import cv2
import numpy as np
from matplotlib import pyplot as plt

img = cv2.imread('wiki.jpg',0) # Assuming wiki.jpg is present

laplacian = cv2.Laplacian(img,cv2.CV_64F)
sobelx = cv2.Sobel(img,cv2.CV_64F,1,0,ksize=5)
sobely = cv2.Sobel(img,cv2.CV_64F,0,1,ksize=5)

plt.subplot(2,2,1),plt.imshow(img,cmap = 'gray')
plt.title('Original'), plt.xticks([]), plt.yticks([])
plt.subplot(2,2,2),plt.imshow(laplacian,cmap = 'gray')
plt.title('Laplacian'), plt.xticks([]), plt.yticks([])
plt.subplot(2,2,3),plt.imshow(sobelx,cmap = 'gray')
plt.title('Sobel X'), plt.xticks([]), plt.yticks([])
plt.subplot(2,2,4),plt.imshow(sobely,cmap = 'gray')
plt.title('Sobel Y'), plt.xticks([]), plt.yticks([])

plt.show()

import cv2
import numpy as np
import matplotlib.pyplot as plt

image_path = "/content/reigns.jpg"
img= cv2.imread(image_path,cv2.IMREAD_COLOR)

gray =cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)

edges_x=cv2.Sobel(gray, cv2.CV_64F,1,0, ksize=3)
edges_y=cv2.Sobel(gray, cv2.CV_64F,0,1, ksize=3)
edges=cv2.magnitude(edges_x, edges_y)

plt.figure(figsize=(12,4))
plt.subplot(121),plt.imshow(cv2.cvtColor(img,cv2.COLOR_BGR2RGB)),
plt.title("ORIGINAL IMAGE")

plt.subplot(122),plt.imshow(edges, cmap='gray'),plt.title("Edge detected")
plt.show()

import matplotlib.pyplot as plt
import cv2
import numpy as np
from matplotlib import pyplot as plt


laplacian = cv2.Laplacian(img,cv2.CV_64F)
sobelx = cv2.Sobel(img,cv2.CV_64F,1,0,ksize=5)
sobely = cv2.Sobel(img,cv2.CV_64F,0,1,ksize=5)

plt.subplot(2,2,1),plt.imshow(img,cmap = 'gray')
plt.title('Original'), plt.xticks([]), plt.yticks([])
plt.subplot(2,2,2),plt.imshow(laplacian,cmap = 'gray')
plt.title('Laplacian'), plt.xticks([]), plt.yticks([])
plt.subplot(2,2,3),plt.imshow(sobelx,cmap = 'gray')
plt.title('Sobel X'), plt.xticks([]), plt.yticks([])
plt.subplot(2,2,4),plt.imshow(sobely,cmap = 'gray')
plt.title('Sobel Y'), plt.xticks([]), plt.yticks([])

plt.show()

plt.title("---------------Sobel Edge Detection------------")

image_path = "/content/reigns.jpg" # Assuming reigns.jpg is present
img= cv2.imread(image_path,cv2.IMREAD_COLOR)
gray =cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)
edges_x=cv2.Sobel(gray, cv2.CV_64F,1,0, ksize=3)
edges_y=cv2.Sobel(gray, cv2.CV_64F,0,1, ksize=3)
edges = cv2.magnitude(edges_x, edges_y) # Calculate magnitude
plt.figure(figsize=(12,4))
plt.subplot(121),plt.imshow(cv2.cvtColor(img,cv2.COLOR_BGR2RGB)),
plt.title("ORIGINAL IMAGE")

plt.subplot(122),plt.imshow(edges, cmap='gray'),plt.title("Edge detected")
plt.show()

